Problem Description
Given an array A of N integers. Sort the array in increasing order of the value at the tens place digit of every number.

If a number has no tens digit, we can assume value to be 0.
If 2 numbers have same tens digit, in that case number with max value will come first
Solution should be based on comparator.


Problem Constraints
1 <= N <= 105

1 <= A[i] <= 109



Input Format
First argument A is an array of integers.



Output Format
Return the array after sorting



Example Input
Input 1:
A = [15, 11, 7, 19]
Input 2:
A = [2, 24, 22, 19]


Example Output
Output 1:
[7, 19, 15, 11]
Output 2:
[2, 19, 24, 22]


A = [2, 24, 22, 19]
// 7 28 26 36 63 63 77 87 93 
let B = A.map((num)=> getTensDigit(num));

A.sort((a, b)=> {
  let tensDigitA = getTensDigit(a);
  let tensDigitB = getTensDigit(b);
  if(tensDigitA === tensDigitB){
    return getOnesDigit(b) - getOnesDigit(a)
  }
  return tensDigitA-tensDigitB
})

  
function getTensDigit(num){
  return Math.floor(num /10 )%10
}

function getOnesDigit(num){
  return num%10
}
console.log(A)
